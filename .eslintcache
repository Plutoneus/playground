[{"C:\\Users\\Pluto\\github\\playground\\src\\App.js":"1","C:\\Users\\Pluto\\github\\playground\\src\\index.js":"2","C:\\Users\\Pluto\\github\\playground\\src\\components\\Nav.js":"3","C:\\Users\\Pluto\\github\\playground\\src\\components\\Home.js":"4","C:\\Users\\Pluto\\github\\playground\\src\\components\\About.js":"5","C:\\Users\\Pluto\\github\\playground\\src\\components\\ItemDetail.js":"6","C:\\Users\\Pluto\\github\\playground\\src\\components\\Monsters.js":"7"},{"size":741,"mtime":1608102324727,"results":"8","hashOfConfig":"9"},{"size":224,"mtime":1607662380849,"results":"10","hashOfConfig":"9"},{"size":1107,"mtime":1608107361515,"results":"11","hashOfConfig":"9"},{"size":171,"mtime":1607667949678,"results":"12","hashOfConfig":"9"},{"size":165,"mtime":1607705847945,"results":"13","hashOfConfig":"9"},{"size":321,"mtime":1607669558824,"results":"14","hashOfConfig":"9"},{"size":2108,"mtime":1608101162485,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"swdeze",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"C:\\Users\\Pluto\\github\\playground\\src\\App.js",[],"C:\\Users\\Pluto\\github\\playground\\src\\index.js",[],"C:\\Users\\Pluto\\github\\playground\\src\\components\\Nav.js",["32"],"import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport '../index.css';\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav>\r\n            <NavLink className=\"nav-link\" to=\"/playground\">\r\n                <li className=\"fas fa-cheese fa-2x\"></li>\r\n            </NavLink>\r\n            <ul className=\"nav-links\">\r\n                <NavLink className=\"nav-link\" to=\"/playground/about\">\r\n                    <li>About</li>\r\n                </NavLink>\r\n                <NavLink className=\"nav-link\" to=\"/playground/monsters\">\r\n                    <li>Monsters</li>\r\n                </NavLink>\r\n                <NavLink className=\"nav-link\" to=\"/playground/monsters\">\r\n                    <li>Monsters</li>\r\n                </NavLink>\r\n                <NavLink className=\"nav-link\" to=\"/playground/monsters\">\r\n                    <li>Monsters</li>\r\n                </NavLink>\r\n                <NavLink className=\"nav-link\" to=\"/playground/monsters\">\r\n                    <li>Monsters</li>\r\n                </NavLink>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;\r\n","C:\\Users\\Pluto\\github\\playground\\src\\components\\Home.js",[],"C:\\Users\\Pluto\\github\\playground\\src\\components\\About.js",[],"C:\\Users\\Pluto\\github\\playground\\src\\components\\ItemDetail.js",["33","34"],"C:\\Users\\Pluto\\github\\playground\\src\\components\\Monsters.js",["35","36"],"import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../index.css';\r\n\r\nconst Description = (props) => {\r\n    const [showResults, setShowResults] = useState(false) // Setting a bool\r\n\r\n    const onDetailsClick = () => setShowResults(!showResults)\r\n\r\n    useEffect(() => {\r\n        setShowResults();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"submit\" value={showResults ? \"-\" : \"+\"} onClick={onDetailsClick} />\r\n            {\r\n                showResults ?\r\n                <Results desc={props.desc}/> :\r\n                <Results style={{display: 'none'}}/>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Results = (props) => (\r\n    <div id=\"results\">\r\n        {props.desc}\r\n    </div>\r\n);\r\n\r\nconst Monsters = () => {\r\n\r\n    // style={{\r\n    //     backgroundImage:\r\n    //     `url(https://monsterhunterworld.wiki.fextralife.com/file/Monster-Hunter-World/gthumbnails/mhw-${item.name.toLowerCase().replace(/ /g,'_')}_icon.png)`\r\n    // }}\r\n\r\n    useEffect(() => {\r\n        fetchItems();\r\n    }, []);\r\n\r\n    const [items, setItems] = useState([]); // Setting an empty array\r\n\r\n    const fetchItems = async () => {\r\n        const data = await fetch('https://mhw-db.com/monsters');\r\n\r\n        const items = await data.json();\r\n        console.log(items);\r\n        setItems(items);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <header className=\"section-header\">\r\n                <h1>Monsters</h1>\r\n            </header>\r\n            <div className=\"monster-section\">\r\n\r\n\r\n\r\n                {items.map(item => (\r\n                    <span className=\"hover-text\" title={\"Elements: \" + (\r\n                        (item.elements.length != 0) ? item.elements : \"No element\"\r\n                    )}>\r\n                        <div className=\"monster-card\">\r\n                            <h1>{item.name}</h1>\r\n                            <Description desc={item.description}/>\r\n                        </div>\r\n                    </span>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Monsters;\r\n",{"ruleId":"37","severity":1,"message":"38","line":2,"column":19,"nodeType":"39","messageId":"40","endLine":2,"endColumn":23},{"ruleId":"37","severity":1,"message":"41","line":9,"column":12,"nodeType":"39","messageId":"40","endLine":9,"endColumn":17},{"ruleId":"37","severity":1,"message":"42","line":9,"column":19,"nodeType":"39","messageId":"40","endLine":9,"endColumn":27},{"ruleId":"37","severity":1,"message":"38","line":2,"column":10,"nodeType":"39","messageId":"40","endLine":2,"endColumn":14},{"ruleId":"43","severity":1,"message":"44","line":64,"column":47,"nodeType":"45","messageId":"46","endLine":64,"endColumn":49},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'items' is assigned a value but never used.","'setItems' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]